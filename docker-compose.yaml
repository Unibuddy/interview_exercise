version: '3.5'

services:
  app:
    build:
      context: .
    environment:
      JWT_SECRET_KEY: 'your_jwt_secret_key' 
      API_KEY_FOR_CLIENT: 'your_api_key_for_client'
      MONGO_CONNECTION_STRING: 'mongodb://localadmin:localadmin@interview_exercise-mongo-1:27017/unibuddy-chat-local?authSource=admin'
      # Add other necessary environment variables here
    ports:
      - "3000:3000"  # Map port 3000 of the container to port 3000 on the host

  mock-user-service:
    image: mockserver/mockserver:mockserver-5.11.1
    ports:
      - 1080:1080
    environment:
      MOCKSERVER_MAX_EXPECTATIONS: 100
      MOCKSERVER_MAX_HEADER_SIZE: 8192
    healthcheck:
      test: ["CMD", "java", "-version"]
      interval: 10s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:5.0.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: localadmin
      MONGO_INITDB_ROOT_PASSWORD: localadmin
      MONGO_DB_NAME: unibuddy-chat-local
    ports:
      - 27017:27017
    healthcheck:
      test:
        [
          'CMD',
          '/bin/bash',
          '-c',
          'echo ''db.runCommand("ping").ok'' | mongo localhost:27017/test --quiet',
        ]
      interval: 10s
      timeout: 10s
      retries: 3


  redis:
    image: redis:6.0.20-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 3
 
